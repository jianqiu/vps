package vm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/jianqiu/vps/models"
)

/*ListVMOK successful operation

swagger:response listVmOK
*/
type ListVMOK struct {

	// In: body
	Payload *models.VmsResponse `json:"body,omitempty"`
}

// NewListVMOK creates ListVMOK with default headers values
func NewListVMOK() *ListVMOK {
	return &ListVMOK{}
}

// WithPayload adds the payload to the list Vm o k response
func (o *ListVMOK) WithPayload(payload *models.VmsResponse) *ListVMOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list Vm o k response
func (o *ListVMOK) SetPayload(payload *models.VmsResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListVMOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ListVMNotFound vm not found

swagger:response listVmNotFound
*/
type ListVMNotFound struct {
}

// NewListVMNotFound creates ListVMNotFound with default headers values
func NewListVMNotFound() *ListVMNotFound {
	return &ListVMNotFound{}
}

// WriteResponse to the client
func (o *ListVMNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
}

/*ListVMDefault unexpected error

swagger:response listVmDefault
*/
type ListVMDefault struct {
	_statusCode int

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewListVMDefault creates ListVMDefault with default headers values
func NewListVMDefault(code int) *ListVMDefault {
	if code <= 0 {
		code = 500
	}

	return &ListVMDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the list Vm default response
func (o *ListVMDefault) WithStatusCode(code int) *ListVMDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the list Vm default response
func (o *ListVMDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the list Vm default response
func (o *ListVMDefault) WithPayload(payload *models.Error) *ListVMDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list Vm default response
func (o *ListVMDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListVMDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
